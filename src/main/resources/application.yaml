spring:
  profiles:
    active: "default"
  application:
    name: "${SPRING_APP_NAME:recommendation-service}"
  data:
    redis:
      host: "${REDIS_HOST:redis}"
      port: "${REDIS_PORT:6379}"
      database: 1
  cache:
    type: redis
  output:
    ansi:
      enabled: always

logging:
  pattern:
    console: "${LOG_PATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}"

management:
  endpoints:
    web:
      exposure:
        include: "*"

server:
  port: 8088

security:
  api-key: "${BASE_API_KEY}"
  feign:
    user-service:
      api-key: "${USER_API_KEY}"
      enabled: true
    job-service:
      api-key: "${JOB_API_KEY}"
      enabled: true
    review-service:
      api-key: "${REVIEW_API_KEY}"
      enabled: true
    report-service:
      api-key: "${REPORT_API_KEY}"
      enabled: true
    reservation-service:
      api-key: "${RESERVATION_API_KEY}"
      enabled: true
  paths:
    permitted-requests-for-all-users:
      - method: GET
        pattern: "/actuator/**"
      - method: GET
        pattern: "/swagger-ui/**"
      - method: GET
        pattern: "/v3/api-docs/**"
    permitted-requests-for-users-or-admin-or-super-admin:
      - method: GET
        pattern: "/v1/recommendations/jobs"

# Base URLs for microservices
service:
  urls:
    auth-service: http://auth-service:8080
    user-service: http://user-service:8081
    job-service: http://job-service:8082
    reservation-service: http://reservation-service:8083
    review-service: http://review-service:8084
    report-service: http://report-service:8085
    chat-service: http://chat-service:8086
    notification-service: http://notification-service:8087
    recommendation-service: http://recommendation-service:8088
    payment-service: http://payment-service:8089

# Web client configurations
web:
  client:
    user-service:
      base-url-users: "/v1/users"
      base-url-favorites: "/v1/favorites"
      base-url-blocks: "/v1/blocks"
      base-url-preferences: "/v1/preferences"
    job-service:
      base-url: "/v1/jobs"
    review-service:
      base-url: "/v1/review"
      api-user-rating: "/rating/USER"
      api-job-rating: "/rating/JOB"
    reservation-service:
      base-url: "/v1/reservations"
      api-job-reservation-count: "/count"
    report-service:
      base-url: "/v1/report"
      api-user-report-info: "/info/USER"
      api-job-report-info: "/info/JOB"
    geolocation-service:
      base-url: "https://nominatim.openstreetmap.org"
      api-search: "/search"

# Recommendation engine weights
recommendation:
  weights:
    distance: 5.0                   # Points for being within preferred distance
    experience-match: 8.0          # Points for matching preferred experience
    category-match: 15.0            # Points for being in the list of wanted categories
    favorite: 10.0                  # Points for being user's favorite
    worker-rating: 15.0             # Multiplier for average rating is in range [0-5]
    job-rating: 20.0                # Multiplier for category rating is in range [0-5]
    hourly-rate: -0.1               # Penalty points per unit of currency
    user-reports-low: -1.0          # Penalty per low severity report against user
    user-reports-medium: -2.0       # Penalty per medium severity report against user
    user-reports-high: -5.5         # Penalty per high severity report against user
    job-reports-low: -2.0           # Penalty per low severity report against job
    job-reports-medium: -5.0        # Penalty per medium severity report against job
    job-reports-high: -7.5          # Penalty per high severity report against job
    job-reservations-count: 0.25    # Multiplier for number of reservations
  defaults:
    limit: 15                       # Default number of recommendations
    max-distance: 100.0             # Default maximum distance if preference not set
    min-experience: 1               # Default minimum experience if preference not set

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL:http://eureka-naming-server:8761/eureka}